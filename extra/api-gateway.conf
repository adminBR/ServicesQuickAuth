upstream django {
  server 192.168.1.64:1112;
}

upstream service_5010 {
  server 127.0.0.1:5010;
}

server {
  listen 80;
  server_name 192.168.1.64;

  # ——————————————————————————————
  # 1) SPA static or dev server
  # ——————————————————————————————
  location / {
    # if you’re running CRA/Vite dev on :1111
    proxy_pass http://127.0.0.1:1111;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
  }

  # ——————————————————————————————
  # 2) Login endpoint (no auth)
  # ——————————————————————————————
  location = /api/v1/users/login/ {
    proxy_pass         http://django;
    proxy_set_header   Host $host;
    proxy_set_header   X-Real-IP $remote_addr;
  }

  # ——————————————————————————————
  # 3) Internal validate subrequest
  # ——————————————————————————————
  location = /_auth {
    internal;
    proxy_pass              http://django/api/v1/users/validate;
    proxy_pass_request_body off;
    proxy_set_header        Host $host;
    proxy_set_header        Authorization "Bearer $cookie_token";
    proxy_set_header        Content-Length "";
  }

  # Catch-all for other /api routes (like /validate)
  location /api/ {
    proxy_pass         http://django;
    proxy_set_header   Host $host;
    proxy_set_header   X-Real-IP $remote_addr;
  }
  # ——————————————————————————————
  # 4) Protected “service1”
  # ——————————————————————————————
  location /service1/ {
    auth_request /_auth;
    proxy_pass http://service_5010/;
    proxy_http_version 1.1;
  
    # Fix asset loading by rewriting URLs (very basic)
    sub_filter_types text/html;
    sub_filter_once off;
    sub_filter '/assets/' '/service1/assets/';
  }
  
  error_page 401 = @redirect_login;
  location @redirect_login {
    return 302 /login;  # or `/` depending on your front-end routing
  }    

  # custom JSON 401
  error_page 401 = @err401;
  location @err401 {
    add_header Content-Type application/json;
    return 401 '{"error":"Unauthorized"}';
  }
}
